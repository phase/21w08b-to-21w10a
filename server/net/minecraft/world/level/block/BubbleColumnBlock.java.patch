--- net/minecraft/world/level/block/BubbleColumnBlock.java
+++ net/minecraft/world/level/block/BubbleColumnBlock.java
@@ -50,54 +50,59 @@
       }
 
    }
 
    public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
-      growColumn(var2, var3.above(), getDrag(var2, var3));
+      updateColumn(var2, var3, var1, var2.getBlockState(var3.below()));
    }
 
    public FluidState getFluidState(BlockState var1) {
       return Fluids.WATER.getSource(false);
    }
 
-   public static void growColumn(LevelAccessor var0, BlockPos var1, boolean var2) {
-      BlockPos.MutableBlockPos var3 = var1.mutable();
+   public static void updateColumn(LevelAccessor var0, BlockPos var1, BlockState var2) {
+      updateColumn(var0, var1, var0.getBlockState(var1), var2);
+   }
 
-      while(canExistIn(var0, var3)) {
-         var0.setBlock(var3, (BlockState)Blocks.BUBBLE_COLUMN.defaultBlockState().setValue(DRAG_DOWN, var2), 2);
-         var3.move(Direction.UP);
-      }
+   public static void updateColumn(LevelAccessor var0, BlockPos var1, BlockState var2, BlockState var3) {
+      if (canExistIn(var2)) {
+         BlockState var4 = getColumnState(var3);
+         var0.setBlock(var1, var4, 2);
+         BlockPos.MutableBlockPos var5 = var1.mutable().move(Direction.UP);
 
+         while(canExistIn(var0.getBlockState(var5))) {
+            if (!var0.setBlock(var5, var4, 2)) {
+               return;
+            }
+
+            var5.move(Direction.UP);
+         }
+
+      }
    }
 
-   public static boolean canExistIn(LevelAccessor var0, BlockPos var1) {
-      FluidState var2 = var0.getFluidState(var1);
-      return var0.getBlockState(var1).is(Blocks.WATER) && var2.getAmount() >= 8 && var2.isSource();
+   private static boolean canExistIn(BlockState var0) {
+      return var0.is(Blocks.BUBBLE_COLUMN) || var0.is(Blocks.WATER) && var0.getFluidState().getAmount() >= 8 && var0.getFluidState().isSource();
    }
 
-   private static boolean getDrag(BlockGetter var0, BlockPos var1) {
-      BlockState var2 = var0.getBlockState(var1);
-      if (var2.is(Blocks.BUBBLE_COLUMN)) {
-         return (Boolean)var2.getValue(DRAG_DOWN);
+   private static BlockState getColumnState(BlockState var0) {
+      if (var0.is(Blocks.BUBBLE_COLUMN)) {
+         return var0;
+      } else if (var0.is(Blocks.SOUL_SAND)) {
+         return (BlockState)Blocks.BUBBLE_COLUMN.defaultBlockState().setValue(DRAG_DOWN, false);
       } else {
-         return !var2.is(Blocks.SOUL_SAND);
+         return var0.is(Blocks.MAGMA_BLOCK) ? (BlockState)Blocks.BUBBLE_COLUMN.defaultBlockState().setValue(DRAG_DOWN, true) : Blocks.WATER.defaultBlockState();
       }
    }
 
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
-      if (!var1.canSurvive(var4, var5)) {
-         return Blocks.WATER.defaultBlockState();
-      } else {
-         if (var2 == Direction.DOWN) {
-            var4.setBlock(var5, (BlockState)Blocks.BUBBLE_COLUMN.defaultBlockState().setValue(DRAG_DOWN, getDrag(var4, var6)), 2);
-         } else if (var2 == Direction.UP && !var3.is(Blocks.BUBBLE_COLUMN) && canExistIn(var4, var6)) {
-            var4.getBlockTicks().scheduleTick(var5, this, 5);
-         }
-
-         var4.getLiquidTicks().scheduleTick(var5, Fluids.WATER, Fluids.WATER.getTickDelay(var4));
-         return super.updateShape(var1, var2, var3, var4, var5, var6);
+      var4.getLiquidTicks().scheduleTick(var5, Fluids.WATER, Fluids.WATER.getTickDelay(var4));
+      if (!var1.canSurvive(var4, var5) || var2 == Direction.DOWN || var2 == Direction.UP && !var3.is(Blocks.BUBBLE_COLUMN) && canExistIn(var3)) {
+         var4.getBlockTicks().scheduleTick(var5, this, 5);
       }
+
+      return super.updateShape(var1, var2, var3, var4, var5, var6);
    }
 
    public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
       BlockState var4 = var2.getBlockState(var3.below());
       return var4.is(Blocks.BUBBLE_COLUMN) || var4.is(Blocks.MAGMA_BLOCK) || var4.is(Blocks.SOUL_SAND);
