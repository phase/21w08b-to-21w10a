--- net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
+++ net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
@@ -1,7 +1,8 @@
 package net.minecraft.world.level.levelgen.structure.templatesystem;
 
+import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.mojang.datafixers.util.Pair;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -15,10 +16,11 @@
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.core.IdMapper;
+import net.minecraft.core.Vec3i;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.DoubleTag;
 import net.minecraft.nbt.IntTag;
 import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.NbtUtils;
@@ -50,19 +52,19 @@
 import net.minecraft.world.phys.shapes.DiscreteVoxelShape;
 
 public class StructureTemplate {
    private final List<StructureTemplate.Palette> palettes = Lists.newArrayList();
    private final List<StructureTemplate.StructureEntityInfo> entityInfoList = Lists.newArrayList();
-   private BlockPos size;
+   private Vec3i size;
    private String author;
 
    public StructureTemplate() {
-      this.size = BlockPos.ZERO;
+      this.size = Vec3i.ZERO;
       this.author = "?";
    }
 
-   public BlockPos getSize() {
+   public Vec3i getSize() {
       return this.size;
    }
 
    public void setAuthor(String var1) {
       this.author = var1;
@@ -70,11 +72,11 @@
 
    public String getAuthor() {
       return this.author;
    }
 
-   public void fillFromWorld(Level var1, BlockPos var2, BlockPos var3, boolean var4, @Nullable Block var5) {
+   public void fillFromWorld(Level var1, BlockPos var2, Vec3i var3, boolean var4, @Nullable Block var5) {
       if (var3.getX() >= 1 && var3.getY() >= 1 && var3.getZ() >= 1) {
          BlockPos var6 = var2.offset(var3).offset(-1, -1, -1);
          ArrayList var7 = Lists.newArrayList();
          ArrayList var8 = Lists.newArrayList();
          ArrayList var9 = Lists.newArrayList();
@@ -455,15 +457,15 @@
       } catch (Exception var3) {
          return Optional.empty();
       }
    }
 
-   public BlockPos getSize(Rotation var1) {
+   public Vec3i getSize(Rotation var1) {
       switch(var1) {
       case COUNTERCLOCKWISE_90:
       case CLOCKWISE_90:
-         return new BlockPos(this.size.getZ(), this.size.getY(), this.size.getX());
+         return new Vec3i(this.size.getZ(), this.size.getY(), this.size.getX());
       default:
          return this.size;
       }
    }
 
@@ -557,57 +559,19 @@
    public BoundingBox getBoundingBox(StructurePlaceSettings var1, BlockPos var2) {
       return this.getBoundingBox(var2, var1.getRotation(), var1.getRotationPivot(), var1.getMirror());
    }
 
    public BoundingBox getBoundingBox(BlockPos var1, Rotation var2, BlockPos var3, Mirror var4) {
-      BlockPos var5 = this.getSize(var2);
-      int var6 = var3.getX();
-      int var7 = var3.getZ();
-      int var8 = var5.getX() - 1;
-      int var9 = var5.getY() - 1;
-      int var10 = var5.getZ() - 1;
-      BoundingBox var11 = new BoundingBox(0, 0, 0, 0, 0, 0);
-      switch(var2) {
-      case COUNTERCLOCKWISE_90:
-         var11 = new BoundingBox(var6 - var7, 0, var6 + var7 - var10, var6 - var7 + var8, var9, var6 + var7);
-         break;
-      case CLOCKWISE_90:
-         var11 = new BoundingBox(var6 + var7 - var8, 0, var7 - var6, var6 + var7, var9, var7 - var6 + var10);
-         break;
-      case CLOCKWISE_180:
-         var11 = new BoundingBox(var6 + var6 - var8, 0, var7 + var7 - var10, var6 + var6, var9, var7 + var7);
-         break;
-      case NONE:
-         var11 = new BoundingBox(0, 0, 0, var8, var9, var10);
-      }
-
-      switch(var4) {
-      case LEFT_RIGHT:
-         this.mirrorAABB(var2, var10, var8, var11, Direction.NORTH, Direction.SOUTH);
-         break;
-      case FRONT_BACK:
-         this.mirrorAABB(var2, var8, var10, var11, Direction.WEST, Direction.EAST);
-      case NONE:
-      }
-
-      var11.move(var1.getX(), var1.getY(), var1.getZ());
-      return var11;
+      return getBoundingBox(var1, var2, var3, var4, this.size);
    }
 
-   private void mirrorAABB(Rotation var1, int var2, int var3, BoundingBox var4, Direction var5, Direction var6) {
-      BlockPos var7 = BlockPos.ZERO;
-      if (var1 != Rotation.CLOCKWISE_90 && var1 != Rotation.COUNTERCLOCKWISE_90) {
-         if (var1 == Rotation.CLOCKWISE_180) {
-            var7 = var7.relative(var6, var2);
-         } else {
-            var7 = var7.relative(var5, var2);
-         }
-      } else {
-         var7 = var7.relative(var1.rotate(var5), var3);
-      }
-
-      var4.move(var7.getX(), 0, var7.getZ());
+   @VisibleForTesting
+   protected static BoundingBox getBoundingBox(BlockPos var0, Rotation var1, BlockPos var2, Mirror var3, Vec3i var4) {
+      Vec3i var5 = var4.offset(-1, -1, -1);
+      BlockPos var6 = transform(BlockPos.ZERO, var3, var1, var2);
+      BlockPos var7 = transform(BlockPos.ZERO.offset(var5), var3, var1, var2);
+      return BoundingBox.createProper(var6, var7).move(var0);
    }
 
    public CompoundTag save(CompoundTag var1) {
       if (this.palettes.isEmpty()) {
          var1.put("blocks", new ListTag());
@@ -697,11 +661,11 @@
 
    public void load(CompoundTag var1) {
       this.palettes.clear();
       this.entityInfoList.clear();
       ListTag var2 = var1.getList("size", 3);
-      this.size = new BlockPos(var2.getInt(0), var2.getInt(1), var2.getInt(2));
+      this.size = new Vec3i(var2.getInt(0), var2.getInt(1), var2.getInt(2));
       ListTag var3 = var1.getList("blocks", 10);
       ListTag var4;
       int var5;
       if (var1.contains("palettes", 9)) {
          var4 = var1.getList("palettes", 9);
