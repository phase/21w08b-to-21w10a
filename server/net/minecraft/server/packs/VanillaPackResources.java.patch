--- net/minecraft/server/packs/VanillaPackResources.java
+++ net/minecraft/server/packs/VanillaPackResources.java
@@ -5,10 +5,11 @@
 import com.google.common.collect.Sets;
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.UncheckedIOException;
 import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.nio.file.FileSystem;
 import java.nio.file.FileSystemNotFoundException;
@@ -30,14 +31,16 @@
 import javax.annotation.Nullable;
 import net.minecraft.Util;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.metadata.MetadataSectionSerializer;
 import net.minecraft.server.packs.metadata.pack.PackMetadataSection;
+import net.minecraft.server.packs.resources.Resource;
+import net.minecraft.server.packs.resources.ResourceProvider;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class VanillaPackResources implements PackResources {
+public class VanillaPackResources implements PackResources, ResourceProvider {
    public static Path generatedDir;
    private static final Logger LOGGER = LogManager.getLogger();
    public static Class<?> clientObject;
    private static final Map<PackType, FileSystem> JAR_FILESYSTEM_BY_TYPE = (Map)Util.make(Maps.newHashMap(), (var0) -> {
       Class var1 = VanillaPackResources.class;
@@ -287,6 +290,34 @@
       return "Default";
    }
 
    public void close() {
    }
+
+   public Resource getResource(final ResourceLocation var1) throws IOException {
+      return new Resource() {
+         @Nullable
+         InputStream inputStream;
+
+         public void close() throws IOException {
+            if (this.inputStream != null) {
+               this.inputStream.close();
+            }
+
+         }
+
+         public InputStream getInputStream() {
+            try {
+               this.inputStream = VanillaPackResources.this.getResource(PackType.CLIENT_RESOURCES, var1);
+            } catch (IOException var2) {
+               throw new UncheckedIOException("Could not get client resource from vanilla pack", var2);
+            }
+
+            return this.inputStream;
+         }
+
+         public String getSourceName() {
+            return var1.toString();
+         }
+      };
+   }
 }
