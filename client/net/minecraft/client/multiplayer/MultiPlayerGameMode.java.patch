--- net/minecraft/client/multiplayer/MultiPlayerGameMode.java
+++ net/minecraft/client/multiplayer/MultiPlayerGameMode.java
@@ -1,16 +1,21 @@
 package net.minecraft.client.multiplayer;
 
+import com.google.common.collect.Lists;
 import com.mojang.datafixers.util.Pair;
+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2ObjectLinkedOpenHashMap;
+import java.util.ArrayList;
+import java.util.Iterator;
 import javax.annotation.Nullable;
 import net.minecraft.client.ClientRecipeBook;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.player.LocalPlayer;
 import net.minecraft.client.resources.sounds.SimpleSoundInstance;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
+import net.minecraft.core.NonNullList;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ServerboundContainerButtonClickPacket;
 import net.minecraft.network.protocol.game.ServerboundContainerClickPacket;
 import net.minecraft.network.protocol.game.ServerboundInteractPacket;
 import net.minecraft.network.protocol.game.ServerboundPickItemPacket;
@@ -28,10 +33,11 @@
 import net.minecraft.world.InteractionResultHolder;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.animal.horse.AbstractHorse;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.ClickType;
+import net.minecraft.world.inventory.Slot;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.context.UseOnContext;
 import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.level.GameType;
 import net.minecraft.world.level.Level;
@@ -347,15 +353,33 @@
       Vec3 var5 = var3.getLocation().subtract(var2.getX(), var2.getY(), var2.getZ());
       this.connection.send((Packet)ServerboundInteractPacket.createInteractionPacket(var2, var1.isShiftKeyDown(), var4, var5));
       return this.localPlayerMode == GameType.SPECTATOR ? InteractionResult.PASS : var2.interactAt(var1, var5, var4);
    }
 
-   public ItemStack handleInventoryMouseClick(int var1, int var2, int var3, ClickType var4, Player var5) {
-      short var6 = var5.containerMenu.backup(var5.getInventory());
-      ItemStack var7 = var5.containerMenu.clicked(var2, var3, var4, var5);
-      this.connection.send((Packet)(new ServerboundContainerClickPacket(var1, var2, var3, var4, var7, var6)));
-      return var7;
+   public void handleInventoryMouseClick(int var1, int var2, int var3, ClickType var4, Player var5) {
+      NonNullList var6 = var5.containerMenu.slots;
+      int var7 = var6.size();
+      ArrayList var8 = Lists.newArrayListWithCapacity(var7);
+      Iterator var9 = var6.iterator();
+
+      while(var9.hasNext()) {
+         Slot var10 = (Slot)var9.next();
+         var8.add(var10.getItem().copy());
+      }
+
+      var5.containerMenu.clicked(var2, var3, var4, var5);
+      Int2ObjectOpenHashMap var14 = new Int2ObjectOpenHashMap();
+
+      for(int var13 = 0; var13 < var7; ++var13) {
+         ItemStack var11 = (ItemStack)var8.get(var13);
+         ItemStack var12 = ((Slot)var6.get(var13)).getItem();
+         if (!ItemStack.matches(var11, var12)) {
+            var14.put(var13, var12.copy());
+         }
+      }
+
+      this.connection.send((Packet)(new ServerboundContainerClickPacket(var1, var2, var3, var4, var5.containerMenu.getCarried().copy(), var14)));
    }
 
    public void handlePlaceRecipe(int var1, Recipe<?> var2, boolean var3) {
       this.connection.send((Packet)(new ServerboundPlaceRecipePacket(var1, var2, var3)));
    }
