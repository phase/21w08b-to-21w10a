--- net/minecraft/client/gui/screens/inventory/CartographyTableScreen.java
+++ net/minecraft/client/gui/screens/inventory/CartographyTableScreen.java
@@ -2,10 +2,11 @@
 
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.blaze3d.vertex.Tesselator;
 import javax.annotation.Nullable;
+import net.minecraft.client.renderer.GameRenderer;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.network.chat.Component;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.entity.player.Inventory;
 import net.minecraft.world.inventory.CartographyTableMenu;
@@ -27,12 +28,13 @@
       this.renderTooltip(var1, var2, var3);
    }
 
    protected void renderBg(PoseStack var1, float var2, int var3, int var4) {
       this.renderBackground(var1);
-      RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      this.minecraft.getTextureManager().bind(BG_LOCATION);
+      RenderSystem.setShader(GameRenderer::getPositionTexShader);
+      RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+      RenderSystem.setShaderTexture(0, BG_LOCATION);
       int var5 = this.leftPos;
       int var6 = this.topPos;
       this.blit(var1, var5, var6, 0, 0, this.imageWidth, this.imageHeight);
       ItemStack var7 = ((CartographyTableMenu)this.menu).getSlot(1).getItem();
       boolean var8 = var7.is(Items.MAP);
@@ -69,43 +71,43 @@
    private void renderResultingMap(PoseStack var1, @Nullable Integer var2, @Nullable MapItemSavedData var3, boolean var4, boolean var5, boolean var6, boolean var7) {
       int var8 = this.leftPos;
       int var9 = this.topPos;
       if (var5 && !var7) {
          this.blit(var1, var8 + 67, var9 + 13, this.imageWidth, 66, 66, 66);
-         this.renderMap(var2, var3, var8 + 85, var9 + 31, 0.226F);
+         this.renderMap(var1, var2, var3, var8 + 85, var9 + 31, 0.226F);
       } else if (var4) {
          this.blit(var1, var8 + 67 + 16, var9 + 13, this.imageWidth, 132, 50, 66);
-         this.renderMap(var2, var3, var8 + 86, var9 + 16, 0.34F);
-         this.minecraft.getTextureManager().bind(BG_LOCATION);
-         RenderSystem.pushMatrix();
-         RenderSystem.translatef(0.0F, 0.0F, 1.0F);
+         this.renderMap(var1, var2, var3, var8 + 86, var9 + 16, 0.34F);
+         RenderSystem.setShaderTexture(0, BG_LOCATION);
+         var1.pushPose();
+         var1.translate(0.0D, 0.0D, 1.0D);
          this.blit(var1, var8 + 67, var9 + 13 + 16, this.imageWidth, 132, 50, 66);
-         this.renderMap(var2, var3, var8 + 70, var9 + 32, 0.34F);
-         RenderSystem.popMatrix();
+         this.renderMap(var1, var2, var3, var8 + 70, var9 + 32, 0.34F);
+         var1.popPose();
       } else if (var6) {
          this.blit(var1, var8 + 67, var9 + 13, this.imageWidth, 0, 66, 66);
-         this.renderMap(var2, var3, var8 + 71, var9 + 17, 0.45F);
-         this.minecraft.getTextureManager().bind(BG_LOCATION);
-         RenderSystem.pushMatrix();
-         RenderSystem.translatef(0.0F, 0.0F, 1.0F);
+         this.renderMap(var1, var2, var3, var8 + 71, var9 + 17, 0.45F);
+         RenderSystem.setShaderTexture(0, BG_LOCATION);
+         var1.pushPose();
+         var1.translate(0.0D, 0.0D, 1.0D);
          this.blit(var1, var8 + 66, var9 + 12, 0, this.imageHeight, 66, 66);
-         RenderSystem.popMatrix();
+         var1.popPose();
       } else {
          this.blit(var1, var8 + 67, var9 + 13, this.imageWidth, 0, 66, 66);
-         this.renderMap(var2, var3, var8 + 71, var9 + 17, 0.45F);
+         this.renderMap(var1, var2, var3, var8 + 71, var9 + 17, 0.45F);
       }
 
    }
 
-   private void renderMap(@Nullable Integer var1, @Nullable MapItemSavedData var2, int var3, int var4, float var5) {
-      if (var1 != null && var2 != null) {
-         RenderSystem.pushMatrix();
-         RenderSystem.translatef((float)var3, (float)var4, 1.0F);
-         RenderSystem.scalef(var5, var5, 1.0F);
-         MultiBufferSource.BufferSource var6 = MultiBufferSource.immediate(Tesselator.getInstance().getBuilder());
-         this.minecraft.gameRenderer.getMapRenderer().render(new PoseStack(), var6, var1, var2, true, 15728880);
-         var6.endBatch();
-         RenderSystem.popMatrix();
+   private void renderMap(PoseStack var1, @Nullable Integer var2, @Nullable MapItemSavedData var3, int var4, int var5, float var6) {
+      if (var2 != null && var3 != null) {
+         var1.pushPose();
+         var1.translate((double)var4, (double)var5, 1.0D);
+         var1.scale(var6, var6, 1.0F);
+         MultiBufferSource.BufferSource var7 = MultiBufferSource.immediate(Tesselator.getInstance().getBuilder());
+         this.minecraft.gameRenderer.getMapRenderer().render(var1, var7, var2, var3, true, 15728880);
+         var7.endBatch();
+         var1.popPose();
       }
 
    }
 }
