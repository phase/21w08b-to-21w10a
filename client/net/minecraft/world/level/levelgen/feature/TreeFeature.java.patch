--- net/minecraft/world/level/levelgen/feature/TreeFeature.java
+++ net/minecraft/world/level/levelgen/feature/TreeFeature.java
@@ -20,11 +20,10 @@
 import net.minecraft.world.level.LevelWriter;
 import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
-import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate;
 import net.minecraft.world.level.material.Material;
 import net.minecraft.world.phys.shapes.BitSetDiscreteVoxelShape;
@@ -83,43 +82,20 @@
    private boolean doPlace(WorldGenLevel var1, Random var2, BlockPos var3, Set<BlockPos> var4, Set<BlockPos> var5, BoundingBox var6, TreeConfiguration var7) {
       int var8 = var7.trunkPlacer.getTreeHeight(var2);
       int var9 = var7.foliagePlacer.foliageHeight(var2, var8, var7);
       int var10 = var8 - var9;
       int var11 = var7.foliagePlacer.foliageRadius(var2, var10);
-      BlockPos var12;
-      int var14;
-      if (!var7.fromSapling) {
-         int var13 = var1.getHeightmapPos(Heightmap.Types.OCEAN_FLOOR, var3).getY();
-         var14 = var1.getHeightmapPos(Heightmap.Types.WORLD_SURFACE, var3).getY();
-         if (var14 - var13 > var7.maxWaterDepth) {
+      if (var3.getY() >= var1.getMinBuildHeight() + 1 && var3.getY() + var8 + 1 <= var1.getMaxBuildHeight()) {
+         if (!isGrassOrDirtOrFarmland(var1, var3.below())) {
             return false;
-         }
-
-         int var15;
-         if (var7.heightmap == Heightmap.Types.OCEAN_FLOOR) {
-            var15 = var13;
-         } else if (var7.heightmap == Heightmap.Types.WORLD_SURFACE) {
-            var15 = var14;
          } else {
-            var15 = var1.getHeightmapPos(var7.heightmap, var3).getY();
-         }
-
-         var12 = new BlockPos(var3.getX(), var15, var3.getZ());
-      } else {
-         var12 = var3;
-      }
-
-      if (var12.getY() >= var1.getMinBuildHeight() + 1 && var12.getY() + var8 + 1 <= var1.getMaxBuildHeight()) {
-         if (!isGrassOrDirtOrFarmland(var1, var12.below())) {
-            return false;
-         } else {
-            OptionalInt var16 = var7.minimumSize.minClippedHeight();
-            var14 = this.getMaxFreeTreeHeight(var1, var8, var12, var7);
-            if (var14 >= var8 || var16.isPresent() && var14 >= var16.getAsInt()) {
-               List var17 = var7.trunkPlacer.placeTrunk(var1, var2, var14, var12, var4, var6, var7);
-               var17.forEach((var8x) -> {
-                  var7.foliagePlacer.createFoliage(var1, var2, var7, var14, var8x, var9, var11, var5, var6);
+            OptionalInt var12 = var7.minimumSize.minClippedHeight();
+            int var13 = this.getMaxFreeTreeHeight(var1, var8, var3, var7);
+            if (var13 >= var8 || var12.isPresent() && var13 >= var12.getAsInt()) {
+               List var14 = var7.trunkPlacer.placeTrunk(var1, var2, var13, var3, var4, var6, var7);
+               var14.forEach((var8x) -> {
+                  var7.foliagePlacer.createFoliage(var1, var2, var7, var13, var8x, var9, var11, var5, var6);
                });
                return true;
             } else {
                return false;
             }
