--- net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer.java
+++ net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer.java
@@ -50,22 +50,22 @@
       return this.baseHeight + var1.nextInt(this.heightRandA + 1) + var1.nextInt(this.heightRandB + 1);
    }
 
    protected static void setBlock(LevelWriter var0, BlockPos var1, BlockState var2, BoundingBox var3) {
       TreeFeature.setBlockKnownShape(var0, var1, var2);
-      var3.expand(new BoundingBox(var1, var1));
+      var3.expand(new BoundingBox(var1));
    }
 
    private static boolean isDirt(LevelSimulatedReader var0, BlockPos var1) {
       return var0.isStateAtPosition(var1, (var0x) -> {
          return Feature.isDirt(var0x) && !var0x.is(Blocks.GRASS_BLOCK) && !var0x.is(Blocks.MYCELIUM);
       });
    }
 
-   protected static void setDirtAt(LevelSimulatedRW var0, BlockPos var1) {
-      if (!isDirt(var0, var1)) {
-         TreeFeature.setBlockKnownShape(var0, var1, Blocks.DIRT.defaultBlockState());
+   protected static void setDirtAt(LevelSimulatedRW var0, Random var1, BlockPos var2, TreeConfiguration var3) {
+      if (var3.forceDirt || !isDirt(var0, var2)) {
+         TreeFeature.setBlockKnownShape(var0, var2, var3.dirtProvider.getState(var1, var2));
       }
 
    }
 
    protected static boolean placeLog(LevelSimulatedRW var0, Random var1, BlockPos var2, Set<BlockPos> var3, BoundingBox var4, TreeConfiguration var5) {
