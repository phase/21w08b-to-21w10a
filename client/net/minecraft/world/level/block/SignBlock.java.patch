--- net/minecraft/world/level/block/SignBlock.java
+++ net/minecraft/world/level/block/SignBlock.java
@@ -27,11 +27,10 @@
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public abstract class SignBlock extends BaseEntityBlock implements SimpleWaterloggedBlock {
    public static final BooleanProperty WATERLOGGED;
-   public static final BooleanProperty LIT;
    protected static final VoxelShape SHAPE;
    private final WoodType type;
 
    protected SignBlock(BlockBehaviour.Properties var1, WoodType var2) {
       super(var1);
@@ -62,42 +61,42 @@
       ItemStack var7 = var4.getItemInHand(var5);
       boolean var8 = var7.getItem() instanceof DyeItem;
       boolean var9 = var7.is(Items.GLOW_INK_SAC);
       boolean var10 = var7.is(Items.INK_SAC);
       boolean var11 = (var9 || var8 || var10) && var4.getAbilities().mayBuild;
-      boolean var12 = (Boolean)var1.getValue(LIT);
-      if (var9 && var12 || var10 && !var12) {
-         return InteractionResult.PASS;
-      } else if (var2.isClientSide) {
+      if (var2.isClientSide) {
          return var11 ? InteractionResult.SUCCESS : InteractionResult.CONSUME;
       } else {
-         BlockEntity var13 = var2.getBlockEntity(var3);
-         if (var13 instanceof SignBlockEntity) {
-            SignBlockEntity var14 = (SignBlockEntity)var13;
-            if (var11) {
-               boolean var15;
-               if (var9) {
-                  var2.playSound((Player)null, (BlockPos)var3, SoundEvents.GLOW_INK_SAC_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
-                  var2.setBlockAndUpdate(var3, (BlockState)var1.setValue(LIT, true));
-                  var15 = true;
-               } else if (var10) {
-                  var2.playSound((Player)null, (BlockPos)var3, SoundEvents.INK_SAC_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
-                  var2.setBlockAndUpdate(var3, (BlockState)var1.setValue(LIT, false));
-                  var15 = true;
-               } else {
-                  var2.playSound((Player)null, (BlockPos)var3, SoundEvents.DYE_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
-                  var15 = var14.setColor(((DyeItem)var7.getItem()).getDyeColor());
-               }
+         BlockEntity var12 = var2.getBlockEntity(var3);
+         if (!(var12 instanceof SignBlockEntity)) {
+            return InteractionResult.PASS;
+         } else {
+            SignBlockEntity var13 = (SignBlockEntity)var12;
+            boolean var14 = var13.hasGlowingText();
+            if ((!var9 || !var14) && (!var10 || var14)) {
+               if (var11) {
+                  boolean var15;
+                  if (var9) {
+                     var2.playSound((Player)null, (BlockPos)var3, SoundEvents.GLOW_INK_SAC_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
+                     var15 = var13.setHasGlowingText(true);
+                  } else if (var10) {
+                     var2.playSound((Player)null, (BlockPos)var3, SoundEvents.INK_SAC_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
+                     var15 = var13.setHasGlowingText(false);
+                  } else {
+                     var2.playSound((Player)null, (BlockPos)var3, SoundEvents.DYE_USE, SoundSource.BLOCKS, 1.0F, 1.0F);
+                     var15 = var13.setColor(((DyeItem)var7.getItem()).getDyeColor());
+                  }
 
-               if (var15 && !var4.isCreative()) {
-                  var7.shrink(1);
+                  if (var15 && !var4.isCreative()) {
+                     var7.shrink(1);
+                  }
                }
-            }
 
-            return var14.executeClickCommands((ServerPlayer)var4) ? InteractionResult.SUCCESS : InteractionResult.PASS;
-         } else {
-            return InteractionResult.PASS;
+               return var13.executeClickCommands((ServerPlayer)var4) ? InteractionResult.SUCCESS : InteractionResult.PASS;
+            } else {
+               return InteractionResult.PASS;
+            }
          }
       }
    }
 
    public FluidState getFluidState(BlockState var1) {
@@ -108,9 +107,8 @@
       return this.type;
    }
 
    static {
       WATERLOGGED = BlockStateProperties.WATERLOGGED;
-      LIT = BlockStateProperties.LIT;
       SHAPE = Block.box(4.0D, 0.0D, 4.0D, 12.0D, 16.0D, 12.0D);
    }
 }
